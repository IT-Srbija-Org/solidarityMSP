---
- name: Get debian-sys-maint MySQL password
  ansible.builtin.command: grep password /etc/mysql/debian.cnf
  register: debian_sys_password
  changed_when: false
  tags: [mysql, config]

- name: Extract password from grep result
  ansible.builtin.set_fact:
    debian_sys_pass: "{{ debian_sys_password.stdout | regex_search('password = (.*)$', '\\1') | first }}"
  tags: [mysql, config]

- name: Get current MySQL root auth
  ansible.builtin.command: >
    mysql --user=debian-sys-maint --password={{ debian_sys_pass }} -NBe
    "SELECT plugin FROM mysql.user WHERE User='root' AND Host='localhost'"
  register: mysql_root_auth
  changed_when: false
  tags: [mysql, config]

- name: Check if root password matches
  ansible.builtin.command: >
    mysql --user=root --password="{{ mysql_root_password }}" -NBe "SELECT 1"
  register: mysql_password_check
  ignore_errors: true
  changed_when: false
  tags: [mysql, config]

- name: Reset MySQL root password
  ansible.builtin.command: >
    mysql --user=debian-sys-maint --password={{ debian_sys_pass }} -e
    "ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '{{ mysql_root_password }}'"
  when:
    - mysql_root_auth.stdout != 'mysql_native_password' or
      mysql_password_check.rc != 0
  changed_when: mysql_password_check.rc != 0
  tags: [mysql, config]

- name: Create .my.cnf file with root credentials
  ansible.builtin.template:
    src: templates/etc/my.cnf.j2
    dest: /root/.my.cnf
    owner: root
    group: root
    mode: "0600"
  tags: [mysql, config]

- name: Create MySQL database
  community.mysql.mysql_db:
    name: "{{ mysql_database }}"
    state: present
    login_unix_socket: /var/run/mysqld/mysqld.sock
  tags: [mysql, config]

- name: Create MySQL user
  community.mysql.mysql_user:
    name: "{{ mysql_user }}"
    password: "{{ mysql_password }}"
    priv: "{{ mysql_database }}.*:ALL"
    host: localhost
    state: present
    login_unix_socket: /var/run/mysqld/mysqld.sock
  tags: [mysql, config]
