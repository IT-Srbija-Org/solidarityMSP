---
- name: Fail if OS is not Ubuntu
  ansible.builtin.fail:
    msg: "OS not supported"
  when:
    - ansible_distribution != 'Ubuntu'
  tags: [always]

- name: Set a hostname
  ansible.builtin.hostname:
    name: "{{ hostname | default('my-server') | replace('.', '-') }}"
  tags: [setup]

- name: Set timezone
  community.general.timezone:
    name: "{{ timezone }}"
  tags: [setup]

- name: Add PHP repository for Ubuntu 22.04
  ansible.builtin.apt_repository:
    repo: ppa:ondrej/php
    state: present
    update_cache: true
  when:
    - ansible_facts['os_family'] == "Debian"
    - ansible_facts['distribution'] == "Ubuntu"
    - ansible_facts['distribution_version'] is version('22.04', '==')
  tags: [packages]

- name: Install repo dependencies for Debian
  ansible.builtin.apt:
    name:
      - apt-transport-https
      - ca-certificates
      - lsb-release
      - gnupg
    state: present
    update_cache: true
  when:
    - ansible_facts['os_family'] == "Debian"
    - ansible_facts['distribution'] == "Debian"
  tags: [packages]

- name: Add PHP repository GPG key for Debian
  ansible.builtin.apt_key:
    url: https://packages.sury.org/php/apt.gpg
    state: present
  when:
    - ansible_facts['os_family'] == "Debian"
    - ansible_facts['distribution'] == "Debian"
  tags: [packages]

- name: Add PHP Sury repo for Debian
  ansible.builtin.apt_repository:
    repo: "deb https://packages.sury.org/php/ {{ ansible_facts['distribution_release'] }} main"
    state: present
    update_cache: true
  when:
    - ansible_facts['os_family'] == "Debian"
    - ansible_facts['distribution'] == "Debian"
  tags: [packages]

# - name: Set MySQL server package name
#   ansible.builtin.set_fact:
#     mysql_server_package: "{{ 'mysql-server' if ansible_facts['distribution'] == 'Ubuntu' else 'default-mysql-server' }}"
#   tags: [packages]

- name: Update apt cache
  ansible.builtin.apt:
    update_cache: true
    cache_valid_time: 3600
  tags: [packages]

- name: Upgrade all apt packages
  ansible.builtin.apt:
    upgrade: dist
    force_apt_get: yes
  tags: [packages]

- name: Check if a reboot is needed
  ansible.builtin.stat:
    path: /var/run/reboot-required
    get_checksum: no
  register: reboot_required_file
  tags: [packages]

- name: Reboot if kernel is updated
  ansible.builtin.reboot:
    msg: "Reboot initiated by Ansible for kernel updates"
    connect_timeout: 5
    reboot_timeout: 300
    pre_reboot_delay: 0
    post_reboot_delay: 30
    test_command: uptime
  when: reboot_required_file.stat.exists
  tags: [packages]

- name: Install required system packages
  ansible.builtin.apt:
    name:
    #   - "{{ mysql_server_package }}"
      - python3-pymysql
      - php8.3-fpm
      - php8.3-cli
      - php8.3-common
      - php8.3-mysql
      - php8.3-zip
      - php8.3-gd
      - php8.3-mbstring
      - php8.3-curl
      - php8.3-xml
      - php8.3-bcmath
      - php8.3-opcache
      - php8.3-redis
      - php8.3-intl
      - php8.3-imagick
      - php8.3-igbinary
      - git
      - curl
      - unzip
      - nginx
      - redis-server
      - imagemagick
      - certbot
      - python3-certbot-nginx
      - ufw
      - acl
    state: present
  tags: [packages]
