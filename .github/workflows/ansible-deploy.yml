name: Ansible Deploy

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Git branch to deploy'
        required: false
        default: 'main'
      # Deployment mode selector:
      # - all: run all tasks (full redeployment)
      # - code-deploy: run only tasks tagged with 'deploy' (minimal downtime)
      # - no-code-deploy: run all tasks except those tagged with 'deploy' (skip code deployment)
      deploy_mode:
        description: "Choose which tasks to run: 'code-deploy' (only update app code), 'no-code-deploy' (all except code update), or 'all' (full redeploy including code and system changes)."
        required: false
        default: 'code-deploy'
        type: choice
        options:
          - all
          - code-deploy
          - no-code-deploy

jobs:
  check-admin:
    runs-on: ubuntu-latest
    steps:
      - name: Check if actor is repo admin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ACTOR: ${{ github.actor }}
          REPO: ${{ github.repository }}
        run: |
          sudo apt-get update && sudo apt-get install -y jq
          ROLE=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/repos/$REPO/collaborators/$ACTOR/permission" | jq -r .permission)
          if [ "$ROLE" != "admin" ]; then
            echo "Only repository admins can manually trigger this workflow. Current role: $ROLE"
            exit 1
          fi

  ansible-deploy:
    runs-on: ubuntu-latest
    needs: check-admin
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Copy example vars to real vars
        run: cp ansible/vars.yml.example ansible/vars.yml

      - name: Run Ansible Playbook
        uses: dawidd6/action-ansible-playbook@v3
        with:
          playbook: deploy.yml
          directory: ansible
          requirements: requirements.yml
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          inventory: |
            [solidarity_servers]
            ${{ secrets.DOMAIN_NAME }} ansible_user=root

            [all:vars]
            ansible_python_interpreter=/usr/bin/python3
          options: >
            ${{ github.event.inputs.deploy_mode == 'code-deploy' && '--tags deploy' || github.event.inputs.deploy_mode == 'no-code-deploy' && '--skip-tags deploy' || '' }}
            --extra-vars "domain_name=${{ secrets.DOMAIN_NAME }}"
            --extra-vars "mysql_password=${{ secrets.MYSQL_PASSWORD }}"
            --extra-vars "app_secret=${{ secrets.APP_SECRET }}"
            --extra-vars "mailer_dsn=${{ secrets.MAILER_DSN }}"
            --extra-vars "git_branch=${{ github.event.inputs.branch }}"
